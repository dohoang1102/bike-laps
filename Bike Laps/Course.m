//
//  Course.m
//  Laps
//
//  Created by finucane on 3/6/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "Course.h"
#import "ObjectGraph.h"
#import "insist.h"

@implementation Course

@dynamic listOrder;
@dynamic courseTimeInterval;
@dynamic lapTimeInterval;
@dynamic maxSavedWorkouts;
@dynamic name;
@dynamic workouts;
@dynamic bestGPS;


/*this should have been generated by core data*/
- (void)insertObject:(Workout*)value inWorkoutsAtIndex:(NSUInteger)idx
{
  NSMutableOrderedSet*set = [[NSMutableOrderedSet alloc] initWithOrderedSet:self.workouts];
  [set insertObject:value atIndex:idx];
  self.workouts = set;
}

- (void)removeObjectFromWorkoutsAtIndex:(NSUInteger)idx
{
  NSMutableOrderedSet*set = [[NSMutableOrderedSet alloc] initWithOrderedSet:self.workouts];
  [set removeObjectAtIndex:idx];
  self.workouts = set;
}



+(NSString*)defaultName
{
  return @"Untitled Course";
}

/*add a new workout to the end of the array, making room if necessary*/
-(void)addWorkout:(Workout*)workout
{
  int max = [self.maxSavedWorkouts intValue];
  insist (max >= 1);
  
  /*remove workouts if we ran out of room -- remove them from the array and also from the object graph*/
  while ([self.workouts count] >= max)
  {
     NSManagedObject*object = [self.workouts firstObject];
    [[ObjectGraph sharedInstance] remove:object];
    [self removeObjectFromWorkoutsAtIndex:0];
  }
  [self insertObject:workout inWorkoutsAtIndex:[self.workouts count]];
  insist ([self.workouts lastObject] == workout);
}

@end
